/*
 * ISM Service
 * A service for normalizing the interaction with classification markings
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ism.api;

import org.ism.model.CanAccessDto;
import org.ism.model.CanAccessResponse;
import org.ism.model.MarkingResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void appControllerGetSuccessTest() {
        api.appControllerGetSuccess();

        // TODO: test validations
    }
    
    /**
     * Verify a user can access all portion marks provided
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ismControllerCanAccessTest() {
        CanAccessDto canAccessDto = null;
        CanAccessResponse response = api.ismControllerCanAccess(canAccessDto);

        // TODO: test validations
    }
    
    /**
     * Parse a classification string
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ismControllerParseMarkingTest() {
        String format = null;
        String classification = null;
        Boolean fgiExpand = null;
        Boolean fgiCombine = null;
        Boolean enforceProgramNicknames = null;
        Boolean camelCaseKeys = null;
        MarkingResponse response = api.ismControllerParseMarking(format, classification, fgiExpand, fgiCombine, enforceProgramNicknames, camelCaseKeys);

        // TODO: test validations
    }
    
    /**
     * Rollup an array of classification strings to a banner line or portion mark
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ismControllerRollupMarkingsTest() {
        String format = null;
        String body = null;
        List<String> expandable = null;
        Boolean fgiExpand = null;
        Boolean fgiCombine = null;
        Boolean enforceProgramNicknames = null;
        Boolean camelCaseKeys = null;
        MarkingResponse response = api.ismControllerRollupMarkings(format, body, expandable, fgiExpand, fgiCombine, enforceProgramNicknames, camelCaseKeys);

        // TODO: test validations
    }
    
}
