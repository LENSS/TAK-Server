/*
 * ISM Service
 * A service for normalizing the interaction with classification markings
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ism.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.ism.model.NetworkMetadataClassification;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NetworkMetadata
 */
@JsonPropertyOrder({
  NetworkMetadata.JSON_PROPERTY_CLASSIFICATION,
  NetworkMetadata.JSON_PROPERTY_PROGRAMNICKNAMES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T21:49:37.751722524-05:00[America/Chicago]")
public class NetworkMetadata {
  public static final String JSON_PROPERTY_CLASSIFICATION = "classification";
  private NetworkMetadataClassification classification;

  public static final String JSON_PROPERTY_PROGRAMNICKNAMES = "programnicknames";
  private List<String> programnicknames = new ArrayList<>();

  public NetworkMetadata() {
  }

  public NetworkMetadata classification(NetworkMetadataClassification classification) {
    
    this.classification = classification;
    return this;
  }

   /**
   * Get classification
   * @return classification
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkMetadataClassification getClassification() {
    return classification;
  }


  @JsonProperty(JSON_PROPERTY_CLASSIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClassification(NetworkMetadataClassification classification) {
    this.classification = classification;
  }


  public NetworkMetadata programnicknames(List<String> programnicknames) {
    
    this.programnicknames = programnicknames;
    return this;
  }

  public NetworkMetadata addProgramnicknamesItem(String programnicknamesItem) {
    if (this.programnicknames == null) {
      this.programnicknames = new ArrayList<>();
    }
    this.programnicknames.add(programnicknamesItem);
    return this;
  }

   /**
   * ACCMs supported by the network
   * @return programnicknames
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROGRAMNICKNAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getProgramnicknames() {
    return programnicknames;
  }


  @JsonProperty(JSON_PROPERTY_PROGRAMNICKNAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProgramnicknames(List<String> programnicknames) {
    this.programnicknames = programnicknames;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkMetadata networkMetadata = (NetworkMetadata) o;
    return Objects.equals(this.classification, networkMetadata.classification) &&
        Objects.equals(this.programnicknames, networkMetadata.programnicknames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classification, programnicknames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkMetadata {\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    programnicknames: ").append(toIndentedString(programnicknames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

