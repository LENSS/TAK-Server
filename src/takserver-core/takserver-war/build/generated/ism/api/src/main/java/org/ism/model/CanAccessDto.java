/*
 * ISM Service
 * A service for normalizing the interaction with classification markings
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ism.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.ism.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CanAccessDto
 */
@JsonPropertyOrder({
  CanAccessDto.JSON_PROPERTY_MARKINGS,
  CanAccessDto.JSON_PROPERTY_USER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T21:49:37.751722524-05:00[America/Chicago]")
public class CanAccessDto {
  public static final String JSON_PROPERTY_MARKINGS = "markings";
  private List<String> markings = new ArrayList<>();

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public CanAccessDto() {
  }

  public CanAccessDto markings(List<String> markings) {
    
    this.markings = markings;
    return this;
  }

  public CanAccessDto addMarkingsItem(String markingsItem) {
    if (this.markings == null) {
      this.markings = new ArrayList<>();
    }
    this.markings.add(markingsItem);
    return this;
  }

   /**
   * Array of classification strings
   * @return markings
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MARKINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getMarkings() {
    return markings;
  }


  @JsonProperty(JSON_PROPERTY_MARKINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarkings(List<String> markings) {
    this.markings = markings;
  }


  public CanAccessDto user(User user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUser(User user) {
    this.user = user;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CanAccessDto canAccessDto = (CanAccessDto) o;
    return Objects.equals(this.markings, canAccessDto.markings) &&
        Objects.equals(this.user, canAccessDto.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(markings, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CanAccessDto {\n");
    sb.append("    markings: ").append(toIndentedString(markings)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

